RELEASES.md:132:[`Any`]: http://doc.rust-lang.org/nightly/std/any/trait.Any.html
RELEASES.md:133:[`AtomicPtr`]: http://doc.rust-lang.org/nightly/std/sync/atomic/struct.AtomicPtr.html
RELEASES.md:134:[`Borrow`]: http://doc.rust-lang.org/nightly/std/borrow/trait.Borrow.html
RELEASES.md:135:[`CStr`]: http://doc.rust-lang.org/nightly/std/ffi/struct.CStr.html
RELEASES.md:136:[`CString`]: http://doc.rust-lang.org/nightly/std/ffi/struct.CString.html
RELEASES.md:137:[`Debug`]: http://doc.rust-lang.org/nightly/std/fmt/trait.Debug.html
RELEASES.md:138:[`DerefMut`]: http://doc.rust-lang.org/nightly/std/ops/trait.DerefMut.html
RELEASES.md:139:[`Deref`]: http://doc.rust-lang.org/nightly/std/ops/trait.Deref.html
RELEASES.md:140:[`Div`]: http://doc.rust-lang.org/nightly/std/ops/trait.Div.html
RELEASES.md:141:[`Duration`]: http://doc.rust-lang.org/nightly/std/time/struct.Duration.html
RELEASES.md:142:[`Error`]: http://doc.rust-lang.org/nightly/std/error/trait.Error.html
RELEASES.md:143:[`File`]: http://doc.rust-lang.org/nightly/std/fs/struct.File.html
RELEASES.md:144:[`Hash`]: http://doc.rust-lang.org/nightly/std/hash/trait.Hash.html
RELEASES.md:145:[`Hasher`]: http://doc.rust-lang.org/nightly/std/hash/trait.Hasher.html
RELEASES.md:146:[`Send`]: http://doc.rust-lang.org/nightly/std/marker/trait.Send.html
RELEASES.md:147:[`SliceConcatExt`]: http://doc.rust-lang.org/nightly/std/slice/trait.SliceConcatExt.html
RELEASES.md:148:[`Stdin`]: http://doc.rust-lang.org/nightly/std/io/struct.Stdin.html
RELEASES.md:149:[`ToOwned`]: http://doc.rust-lang.org/nightly/std/borrow/trait.ToOwned.html
RELEASES.md:150:[`Wrapping`]: http://doc.rust-lang.org/nightly/std/num/struct.Wrapping.html
RELEASES.md:151:[`connect`]: http://doc.rust-lang.org/nightly/std/slice/trait.SliceConcatExt.html#method.connect
RELEASES.md:152:[`downcast_mut`]: http://doc.rust-lang.org/nightly/std/error/trait.Error.html#method.downcast_mut
RELEASES.md:153:[`downcast_ref`]: http://doc.rust-lang.org/nightly/std/error/trait.Error.html#method.downcast_ref
RELEASES.md:154:[`downcast`]: http://doc.rust-lang.org/nightly/std/error/trait.Error.html#method.downcast
RELEASES.md:155:[`hash_slice`]: http://doc.rust-lang.org/nightly/std/hash/trait.Hash.html#method.hash_slice
RELEASES.md:156:[`id`]: http://doc.rust-lang.org/nightly/std/process/struct.Child.html#method.id
RELEASES.md:157:[`is`]: http://doc.rust-lang.org/nightly/std/error/trait.Error.html#method.is
RELEASES.md:158:[`join`]: http://doc.rust-lang.org/nightly/std/slice/trait.SliceConcatExt.html#method.join
RELEASES.md:159:[`read_to_end`]: http://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_to_end
RELEASES.md:166:[dst1]: http://doc.rust-lang.org/nightly/std/mem/fn.size_of_val.html
RELEASES.md:167:[dst2]: http://doc.rust-lang.org/nightly/std/mem/fn.align_of_val.html
RELEASES.md:173:[hs]: http://doc.rust-lang.org/nightly/std/hash/trait.Hash.html#method.hash_slice
RELEASES.md:174:[ie]: http://doc.rust-lang.org/nightly/std/io/struct.Error.html
RELEASES.md:175:[iec]: http://doc.rust-lang.org/nightly/std/io/struct.Error.html#method.cause
RELEASES.md:176:[iegm]: http://doc.rust-lang.org/nightly/std/io/struct.Error.html#method.get_mut
RELEASES.md:177:[iegr]: http://doc.rust-lang.org/nightly/std/io/struct.Error.html#method.get_ref
RELEASES.md:178:[ieii]: http://doc.rust-lang.org/nightly/std/io/struct.Error.html#method.into_inner
RELEASES.md:187:[nom]: http://doc.rust-lang.org/nightly/nomicon/
RELEASES.md:188:[pc]: http://doc.rust-lang.org/nightly/std/process/struct.Child.html
RELEASES.md:192:[sc]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.contains
RELEASES.md:194:[sew]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.ends_with
RELEASES.md:195:[sf]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.find
RELEASES.md:197:[srf]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.rfind
RELEASES.md:198:[ss]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.split
RELEASES.md:199:[ssw]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.starts_with
RELEASES.md:311:[`Extend`]: https://doc.rust-lang.org/nightly/std/iter/trait.Extend.html
RELEASES.md:313:[`iter::once`]: https://doc.rust-lang.org/nightly/std/iter/fn.once.html
RELEASES.md:314:[`iter::empty`]: https://doc.rust-lang.org/nightly/std/iter/fn.empty.html
RELEASES.md:315:[`matches`]: https://doc.rust-lang.org/nightly/std/primitive.str.html#method.matches
RELEASES.md:316:[`rmatches`]: https://doc.rust-lang.org/nightly/std/primitive.str.html#method.rmatches
RELEASES.md:317:[`Cell`]: https://doc.rust-lang.org/nightly/std/cell/struct.Cell.html
RELEASES.md:318:[`RefCell`]: https://doc.rust-lang.org/nightly/std/cell/struct.RefCell.html
RELEASES.md:319:[`wrapping_add`]: https://doc.rust-lang.org/nightly/std/primitive.i8.html#method.wrapping_add
RELEASES.md:320:[`wrapping_sub`]: https://doc.rust-lang.org/nightly/std/primitive.i8.html#method.wrapping_sub
RELEASES.md:321:[`wrapping_mul`]: https://doc.rust-lang.org/nightly/std/primitive.i8.html#method.wrapping_mul
RELEASES.md:322:[`wrapping_div`]: https://doc.rust-lang.org/nightly/std/primitive.i8.html#method.wrapping_div
RELEASES.md:323:[`wrapping_rem`]: https://doc.rust-lang.org/nightly/std/primitive.i8.html#method.wrapping_rem
RELEASES.md:324:[`wrapping_neg`]: https://doc.rust-lang.org/nightly/std/primitive.i8.html#method.wrapping_neg
RELEASES.md:325:[`wrapping_shl`]: https://doc.rust-lang.org/nightly/std/primitive.i8.html#method.wrapping_shl
RELEASES.md:326:[`wrapping_shr`]: https://doc.rust-lang.org/nightly/std/primitive.i8.html#method.wrapping_shr
RELEASES.md:327:[`Wrapping`]: https://doc.rust-lang.org/nightly/std/num/struct.Wrapping.html
RELEASES.md:328:[`fmt::Formatter`]: https://doc.rust-lang.org/nightly/std/fmt/struct.Formatter.html
RELEASES.md:329:[`fmt::Write`]: https://doc.rust-lang.org/nightly/std/fmt/trait.Write.html
RELEASES.md:330:[`io::Write`]: https://doc.rust-lang.org/nightly/std/io/trait.Write.html
RELEASES.md:331:[`debug_struct`]: https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html#method.debug_struct
RELEASES.md:332:[`debug_tuple`]: https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html#method.debug_tuple
RELEASES.md:333:[`debug_list`]: https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html#method.debug_list
RELEASES.md:334:[`debug_set`]: https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html#method.debug_set
RELEASES.md:335:[`debug_map`]: https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html#method.debug_map
RELEASES.md:336:[`Debug`]: https://doc.rust-lang.org/nightly/std/fmt/trait.Debug.html
RELEASES.md:337:[strup]: https://doc.rust-lang.org/nightly/std/primitive.str.html#method.to_uppercase
RELEASES.md:338:[strlow]: https://doc.rust-lang.org/nightly/std/primitive.str.html#method.to_lowercase
RELEASES.md:339:[`to_uppercase`]: https://doc.rust-lang.org/nightly/std/primitive.char.html#method.to_uppercase
RELEASES.md:340:[`to_lowercase`]: https://doc.rust-lang.org/nightly/std/primitive.char.html#method.to_lowercase
RELEASES.md:341:[`PoisonError`]: https://doc.rust-lang.org/nightly/std/sync/struct.PoisonError.html
RELEASES.md:342:[`RwLock`]: https://doc.rust-lang.org/nightly/std/sync/struct.RwLock.html
RELEASES.md:343:[`Mutex`]: https://doc.rust-lang.org/nightly/std/sync/struct.Mutex.html
RELEASES.md:344:[`FromRawFd`]: https://doc.rust-lang.org/nightly/std/os/unix/io/trait.FromRawFd.html
RELEASES.md:345:[`AsRawFd`]: https://doc.rust-lang.org/nightly/std/os/unix/io/trait.AsRawFd.html
RELEASES.md:346:[`Stdio`]: https://doc.rust-lang.org/nightly/std/process/struct.Stdio.html
RELEASES.md:347:[`ChildStdin`]: https://doc.rust-lang.org/nightly/std/process/struct.ChildStdin.html
RELEASES.md:348:[`ChildStdout`]: https://doc.rust-lang.org/nightly/std/process/struct.ChildStdout.html
RELEASES.md:349:[`ChildStderr`]: https://doc.rust-lang.org/nightly/std/process/struct.ChildStderr.html
RELEASES.md:350:[`io::ErrorKind`]: https://doc.rust-lang.org/nightly/std/io/enum.ErrorKind.html
RELEASES.md:352:[`DerefMut`]: https://doc.rust-lang.org/nightly/std/ops/trait.DerefMut.html
RELEASES.md:353:[`mem::align_of`]: https://doc.rust-lang.org/nightly/std/mem/fn.align_of.html
RELEASES.md:355:[`mem::min_align_of`]: https://doc.rust-lang.org/nightly/std/mem/fn.min_align_of.html
RELEASES.md:446:[`str::split_whitespace`]: https://doc.rust-lang.org/nightly/std/primitive.str.html#method.split_whitespace
RELEASES.md:447:[`FromRawFd`]: https://doc.rust-lang.org/nightly/std/os/unix/io/trait.FromRawFd.html
RELEASES.md:448:[`AsRawFd`]: https://doc.rust-lang.org/nightly/std/os/unix/io/trait.AsRawFd.html
RELEASES.md:449:[`std::os::unix::symlink`]: https://doc.rust-lang.org/nightly/std/os/unix/fs/fn.symlink.html
RELEASES.md:450:[`IntoIterator`]: https://doc.rust-lang.org/nightly/std/iter/trait.IntoIterator.html
RELEASES.md:451:[`From`]: https://doc.rust-lang.org/nightly/std/convert/trait.From.html
RELEASES.md:467:[`Cloned`]: https://doc.rust-lang.org/nightly/std/iter/struct.Cloned.html
RELEASES.md:468:[`Incoming`]: https://doc.rust-lang.org/nightly/std/net/struct.Incoming.html
RELEASES.md:471:[`BinaryHeap`]: https://doc.rust-lang.org/nightly/std/collections/struct.BinaryHeap.html
RELEASES.md:473:[`split_off`]: https://doc.rust-lang.org/nightly/collections/linked_list/struct.LinkedList.html#method.split_off
configure:674:    nightly )
configure:681:        err "release channel must be 'dev', 'nightly', 'beta' or 'stable'"
mk/main.mk:28:# This is the normal semver version string, e.g. "0.12.0", "0.12.0-nightly"
mk/main.mk:30:# This is the string used in dist artifact file names, e.g. "0.12.0", "nightly"
mk/main.mk:43:ifeq ($(CFG_RELEASE_CHANNEL),nightly)
mk/main.mk:44:CFG_RELEASE=$(CFG_RELEASE_NUM)-nightly
mk/main.mk:45:# When building nightly distributables just reuse the same "nightly" name
mk/main.mk:49:CFG_PACKAGE_VERS=nightly
src/doc/nomicon/vec.md:5:project will only work on nightly (as of Rust 1.2.0). With the exception of the
src/doc/trpl/README.md:33:[nr]: nightly-rust.html
src/doc/trpl/SUMMARY.md:60:* [Nightly Rust](nightly-rust.md)
src/doc/trpl/documentation.md:79:[rc-new]: https://doc.rust-lang.org/nightly/std/rc/struct.Rc.html#method.new
src/doc/trpl/nightly-rust.md:3:Rust provides three distribution channels for Rust: nightly, beta, and stable.
src/doc/trpl/nightly-rust.md:4:Unstable features are only available on nightly Rust. For more details on this
src/doc/trpl/nightly-rust.md:9:To install nightly Rust, you can use `rustup.sh`:
src/doc/trpl/nightly-rust.md:12:$ curl -s https://static.rust-lang.org/rustup.sh | sh -s -- --channel=nightly
src/doc/trpl/nightly-rust.md:21:$ sh rustup.sh --channel=nightly
src/doc/trpl/nightly-rust.md:29:[win32]: https://static.rust-lang.org/dist/rust-nightly-i686-pc-windows-gnu.msi
src/doc/trpl/nightly-rust.md:30:[win64]: https://static.rust-lang.org/dist/rust-nightly-x86_64-pc-windows-gnu.msi
src/doc/trpl/nightly-rust.md:80:rustc 1.0.0-nightly (f11f3e7ba 2015-01-04) (built 2015-01-06)
src/doc/trpl/release-channels.md:15:New nightly releases are created once a day. Every six weeks, the latest
src/doc/trpl/release-channels.md:16:nightly release is promoted to ‘Beta’. At that point, it will only receive
src/doc/trpl/release-channels.md:21:nightly goes to beta, beta goes to stable. When `1.x` is released, at
src/doc/trpl/release-channels.md:22:the same time, `1.(x + 1)-beta` is released, and the nightly becomes the
src/doc/trpl/release-channels.md:23:first version of `1.(x + 2)-nightly`.
src/doc/trpl/release-channels.md:30:However, depending on your interest in Rust, you may choose to use nightly
src/doc/trpl/release-channels.md:31:instead. The basic tradeoff is this: in the nightly channel, you can use
src/doc/trpl/release-channels.md:33:and so any new nightly release may break your code. If you use the stable
src/doc/trpl/release-channels.md:43:Additionally, testing against nightly can catch regressions even sooner, and so
src/doc/trpl/release-channels.md:54:  - nightly
src/doc/trpl/release-channels.md:60:    - rust: nightly
src/doc/trpl/release-channels.md:66:breaks on nightly, it won’t fail your build. A similar configuration is
src/liballoc/lib.rs:71:       html_root_url = "https://doc.rust-lang.org/nightly/",
src/libarena/lib.rs:31:       html_root_url = "https://doc.rust-lang.org/nightly/")]
src/libcollections/lib.rs:27:       html_root_url = "https://doc.rust-lang.org/nightly/",
src/libcore/lib.rs:60:       html_root_url = "https://doc.rust-lang.org/nightly/",
src/libflate/lib.rs:26:       html_root_url = "https://doc.rust-lang.org/nightly/")]
src/libfmt_macros/lib.rs:26:       html_root_url = "https://doc.rust-lang.org/nightly/",
src/libgetopts/lib.rs:90:       html_root_url = "https://doc.rust-lang.org/nightly/",
src/libgraphviz/lib.rs:286:       html_root_url = "https://doc.rust-lang.org/nightly/")]
src/liblibc/lib.rs:23:       html_root_url = "https://doc.rust-lang.org/nightly/",
src/liblog/lib.rs:169:       html_root_url = "https://doc.rust-lang.org/nightly/",
src/librand/lib.rs:25:       html_root_url = "https://doc.rust-lang.org/nightly/",
src/librbml/lib.rs:123:       html_root_url = "https://doc.rust-lang.org/nightly/",
src/librustc/diagnostics.rs:305:available on a nightly compiler. Rust currently does not support more general
src/librustc/lib.rs:26:      html_root_url = "https://doc.rust-lang.org/nightly/")]
src/librustc/middle/check_const.rs:724:                                              evaluation is available on a nightly \
src/librustc_back/lib.rs:33:      html_root_url = "https://doc.rust-lang.org/nightly/")]
src/librustc_borrowck/lib.rs:20:      html_root_url = "https://doc.rust-lang.org/nightly/")]
src/librustc_data_structures/lib.rs:28:      html_root_url = "https://doc.rust-lang.org/nightly/")]
src/librustc_driver/lib.rs:26:      html_root_url = "https://doc.rust-lang.org/nightly/")]
src/librustc_front/lib.rs:26:      html_root_url = "http://doc.rust-lang.org/nightly/")]
src/librustc_lint/lib.rs:31:      html_root_url = "https://doc.rust-lang.org/nightly/")]
src/librustc_llvm/lib.rs:26:       html_root_url = "https://doc.rust-lang.org/nightly/")]
src/librustc_privacy/lib.rs:20:      html_root_url = "https://doc.rust-lang.org/nightly/")]
src/librustc_resolve/lib.rs:20:      html_root_url = "https://doc.rust-lang.org/nightly/")]
src/librustc_trans/lib.rs:26:      html_root_url = "https://doc.rust-lang.org/nightly/")]
src/librustc_typeck/check/mod.rs:1603:        // NOTE: @jroesch this is hack that appears to be fixed on nightly, will monitor if
src/librustc_typeck/diagnostics.rs:1425:[book-le]: https://doc.rust-lang.org/nightly/book/lifetimes.html#lifetime-elision
src/librustc_typeck/lib.rs:74:      html_root_url = "https://doc.rust-lang.org/nightly/")]
src/librustc_unicode/lib.rs:31:       html_root_url = "https://doc.rust-lang.org/nightly/",
src/librustdoc/html/static/playpen.js:38:                channel = '&version=nightly';
src/librustdoc/lib.rs:20:   html_root_url = "https://doc.rust-lang.org/nightly/",
src/libserialize/lib.rs:28:       html_root_url = "https://doc.rust-lang.org/nightly/",
src/libstd/lib.rs:196:       html_root_url = "https://doc.rust-lang.org/nightly/",
src/libsyntax/feature_gate.rs:1105:    /// Allow features to me activated, as on nightly.
src/libsyntax/lib.rs:26:       html_root_url = "https://doc.rust-lang.org/nightly/")]
src/libterm/lib.rs:55:       html_root_url = "https://doc.rust-lang.org/nightly/",
src/libtest/lib.rs:35:       html_root_url = "https://doc.rust-lang.org/nightly/")]
